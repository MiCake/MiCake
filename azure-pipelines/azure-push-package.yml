# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'ubuntu-latest'

trigger:
 branches:
   include:
     - releases/preview*

variables:
  solution: '**/*.sln'
  buildConfiguration: 'Release'

parameters:
  - name: pushSupportLibraries
    displayName: 'Do you want to push [MiCake-Support-Libraries] at the same time?'
    type: boolean
    default: false

steps:
- task: UseDotNet@2
  displayName: 'Set current .NET version to $(dotnet_version)'
  inputs:
    packageType: 'sdk'
    version: '$(dotnet_version)'

- ${{ if eq(parameters.pushSupportLibraries, true) }}:
  - task: DotNetCoreCLI@2
    displayName: 'Package All project(Core + Support) to nuget.'
    inputs:
      command: 'pack'
      packagesToPack: '**/*.csproj;!**/*.Tests.csproj'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '$(nuget_version_major)'
      minorVersion: '$(nuget_version_minor)'
      patchVersion: '$(nuget_version_patch)'

- ${{ if eq(parameters.pushSupportLibraries, false) }}:
  - task: DotNetCoreCLI@2
    displayName: 'Package Core project to nuget.'
    inputs:
      command: 'pack'
      packagesToPack: 'src/framework/core/*.csproj'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '$(nuget_version_major)'
      minorVersion: '$(nuget_version_minor)'
      patchVersion: '$(nuget_version_patch)'

- task: NuGetCommand@2
  displayName: 'Push nuget packages to nuget.org'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'MiCake_NuGet_Key'
